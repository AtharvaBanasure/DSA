class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int v, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        
        int indegree[]=new int[v];
        ArrayList<Integer>ans=new ArrayList<>();
        
        for(int i=0;i<adj.size();i++){
            for(int j=0;j<adj.get(i).size();j++){
                indegree[adj.get(i).get(j)]++;
            }
        }
        
        Queue<Integer>q=new LinkedList<>();
        
        for(int i=0;i<v;i++){
            if(indegree[i]==0)
            q.add(i);
        }
        
        while(!q.isEmpty()){
            int x=q.remove();
            ans.add(x);
            
            for(int i=0;i<adj.get(x).size();i++){
                indegree[adj.get(x).get(i)]--;
                if(indegree[adj.get(x).get(i)]==0){
                    q.add(adj.get(x).get(i));
                }
            }
        }
        
        int a[]=new int[ans.size()];
        
        for(int i=0;i<ans.size();i++){
            a[i]=ans.get(i);
        }
        return a;
    }
}