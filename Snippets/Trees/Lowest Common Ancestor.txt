/* A Binary Tree node
class Node
{
    int data;
    Node left, right;

    Node(int item)
    {
        data = item;
        left = right = null;
    }
}*/

class Solution
{
    Node dfs(Node root,int n1,int n2){
        if(root==null){
            return root;
        }
        
        if(root.data==n1 || root.data==n2){
            return root;
        }
        
        Node left=dfs(root.left,n1,n2);
        Node right=dfs(root.right,n1,n2);
        
        if(left==null && right==null)return null;
        else if(left==null && right!=null)return right;
        else if(left!=null && right==null)return left;
        else return root;
    }
    //Function to return the lowest common ancestor in a Binary Tree.
	Node lca(Node root, int n1,int n2)
	{
		// Your code here
		return dfs(root,n1,n2);
	}
}
