class Solution {
    public String removeKdigits(String num, int k) {
        Stack<Character>st=new Stack<>();

        for(int i=0;i<num.length();i++){
            char c=num.charAt(i);
            while(!st.isEmpty() && k>0 && st.peek()>c){
                st.pop();
                k--;
            }

            st.add(c);
        }

        while(k>0 && !st.isEmpty()){
            st.pop();
            k--;
        }

        String x="";
        while(!st.isEmpty()){
            x=st.pop()+x;
        }
        System.out.println(x);
        int j=0;
        while(j<x.length()){
            if(x.charAt(j)=='0'){
                j++;
            }else{
                break;
            }
        }

        // 000123

        x=x.substring(j);
        if(x.length()>0){
            return x;
        }else{
            return "0";
        }


        // for(int i=0;i<num.length();i++){
        //     char c=num.charAt(i);
        //     while(!st.isEmpty()&&k>0&& st.peek()>c){
        //         st.pop();
        //         k--;
        //     }
        //     st.add(c);
        // }

        // while(k>0 && !st.isEmpty()){
        //     st.pop();
        //     k--;
        // }
        // StringBuilder s=new StringBuilder();
        // while(!st.isEmpty()){
        //     s.append(st.pop());
        // }

        // s.reverse();

        // while(s.length()>0 && s.charAt(0)=='0'){
        //     s.deleteCharAt(0);
        // }

        // if(s.length()>0){
        //     return s.toString();
        // }else{
        //     return "0";
        // }
    }
}